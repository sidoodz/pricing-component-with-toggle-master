{"ast":null,"code":"var _jsxFileName = \"/home/sido/Desktop/webProjects/project-tow/pricing-component-with-toggle-master/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Pricing from './Components/Pricing';\nimport AnnuallyData from './Components/AnnuallyData.json';\nimport Card from './Components/Card';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [choice, setChoice] = useState(AnnuallyData);\n  const [isAnnual, setIsAnnual] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Pricing, {\n      setChoice: setChoice,\n      setIsAnnual: setIsAnnual,\n      isAnnual: isAnnual\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: choice.map(data => /*#__PURE__*/_jsxDEV(Card, {\n        data: data\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"qo5BhfLCyBoAlsZAzfSMi3IpyTA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Pricing","AnnuallyData","Card","App","choice","setChoice","isAnnual","setIsAnnual","map","data","id"],"sources":["/home/sido/Desktop/webProjects/project-tow/pricing-component-with-toggle-master/src/App.js"],"sourcesContent":["import React , {useState} from 'react'\nimport Pricing from './Components/Pricing';\nimport AnnuallyData from './Components/AnnuallyData.json';\nimport Card from './Components/Card'\nimport './App.css';\n\n\nconst App = () => {\n\n  const [choice, setChoice] = useState(AnnuallyData)\n  const [isAnnual, setIsAnnual] = useState(true)\n  \n  return (\n    <div className=\"container\">\n      <Pricing \n      setChoice={setChoice} \n      setIsAnnual={setIsAnnual} \n      isAnnual={isAnnual}\n      />\n      <div className=\"card-container\">\n        {choice.map(data => (\n          <Card key={data.id} data={data}/>\n        ))}\n      </div>\n    </div>\n   \n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAO,WAAP;;;AAGA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACE,YAAD,CAApC;EACA,MAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAxC;EAEA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,QAAC,OAAD;MACA,SAAS,EAAEM,SADX;MAEA,WAAW,EAAEE,WAFb;MAGA,QAAQ,EAAED;IAHV;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAK,SAAS,EAAC,gBAAf;MAAA,UACGF,MAAM,CAACI,GAAP,CAAWC,IAAI,iBACd,QAAC,IAAD;QAAoB,IAAI,EAAEA;MAA1B,GAAWA,IAAI,CAACC,EAAhB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CApBD;;GAAMP,G;;KAAAA,G;AAsBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}